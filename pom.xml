<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <modules>
        <module>controller</module>
        <module>service</module>
        <module>mapper</module>
        <module>common</module>
        <module>bean</module>
        <module>config</module>
        <module>interceptor</module>
    </modules>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!-- 打包方式 pom jar war-->
    <packaging>pom</packaging>

    <groupId>com.woow.wu7</groupId>
    <artifactId>7-react-admin-java-pro</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>7-react-admin-java-pro</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <!-- spring-boot-starter-web -->
        <!-- web场景启动器 -->
        <!-- 内置了 jackson，如果没有安装 ( Spring-boot-start-web ) 则需要添加依赖 ( spring-boot-starter-json ) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--校验组件-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>


        <!-- spring-boot-starter-thymeleaf -->
        <!-- 主要用于显示resources/templates中的html -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!-- 1 -->
        <!-- lombok --><!-- Lombok 的 scope=provided，说明它只在编译阶段生效，不需要打入包中 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.16</version>
            <scope>provided</scope>
        </dependency>

        <!-- 2 -->
        <!-- 操作数据库相关 -->
        <!-- mysql驱动 -->
        <!-- mysql驱动注意点：( mysql驱动版本 ) 要和 ( mysql版本) 一致 -->
        <!--- 利用mybatis操作mysql需要三个库 ( mysql + jdbc + mybatis ) -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.21</version>
            <scope>runtime</scope>
        </dependency>
        <!-- spring-boot-starter-data-jdbc -->
        <!-- 注意区分 ( spring-boot-starter-data-jdbc ) 和 ( spring-boot-starter-jdbc ) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jdbc</artifactId>
        </dependency>
        <!-- mybatis -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.1.3</version>
        </dependency>
        <!-- mybatis plus -->
        <!-- mybatis plus包含了 ( mybatis-spring-boot-starter ) 和 ( spring-boot-starter-data-jdbc ) -->
        <!-- 在 application.yml 文件中通过 mybatis-plus: xxx 对其进行定制配置 -->
        <!-- SqlSessionFactory：自动在容器中配置好了，底层是容器中的默认数据源 -->
        <!-- SqlSessionTemplate：自动在容器中配置好了 -->
        <!-- @Mapper 标注也会被自动扫描-->
<!--        <dependency>-->
<!--            <groupId>com.baomidou</groupId>-->
<!--            <artifactId>mybatis-plus-boot-starter</artifactId>-->
<!--            <version>3.4.2</version>-->
<!--        </dependency>-->


        <!-- 3 -->
        <!-- Swagger -->
        <!-- 自动生成 ( 接口文档 ) 及 ( 自测工具 ) -->
        <!-- Swagger2 3.0 只需要 ( springfox-boot-starter ) 就可以了 -->
        <!-- Swagger2 2.x 则需要 ( springfox-swagger2 ) 和 ( springfox-swagger-ui )-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-boot-starter</artifactId>
            <version>3.0.0</version>
        </dependency>
        <!-- (1) springfox-swagger2 -->
        <!--<dependency>-->
        <!--<groupId>io.springfox</groupId>-->
        <!--<artifactId>springfox-swagger2</artifactId>-->
        <!--<version>3.0.0</version>-->
        <!--</dependency>-->
        <!-- (2) springfox-swagger-ui -->
        <!--dependency>-->
        <!--<groupId>io.springfox</groupId>-->
        <!--<artifactId>springfox-swagger-ui</artifactId>-->
        <!--<version>3.0.0</version>-->
        <!--</dependency>-->



    </dependencies>

    <!--	<dependencyManagement>-->
    <!--		<dependencies>-->
    <!--			<dependency>-->
    <!--				<groupId></groupId>-->
    <!--				<artifactId></artifactId>-->
    <!--			</dependency>-->
    <!--		</dependencies>-->
    <!--	</dependencyManagement>-->


</project>
